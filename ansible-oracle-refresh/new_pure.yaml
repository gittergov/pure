---
# Oracle Database Refresh using Lab Scripts
# This playbook runs the existing scripts from the Pure Storage lab

- name: Oracle Database Refresh using Lab Scripts
  hosts: localhost
  gather_facts: no
  
  vars:
    # Lab script directory
    script_dir: /home/oracle/lab/lab1/bash
    
    # Environment variables needed by the scripts
    env_vars:
      ORACLE_HOME: /u01/app/oracle/product/19.0.0/dbhome_1
      GRID_HOME: /u01/app/19.0.0/grid
      ORACLE_SID: orcl
      PATH: /u01/app/oracle/product/19.0.0/dbhome_1/bin:/u01/app/19.0.0/grid/bin:/usr/local/bin:/usr/bin:/bin
    
  tasks:
    - name: Check if running as oracle user
      shell: whoami
      register: current_user
      
    - name: Display current user
      debug:
        msg: "Running as user: {{ current_user.stdout }}"
    
    - name: Check if script directory exists
      stat:
        path: "{{ script_dir }}"
      register: dir_check
      
    - name: Fail if script directory not found
      fail:
        msg: "Script directory {{ script_dir }} not found!"
      when: not dir_check.stat.exists
    
    - name: Step 1 - Insert demo record in source database
      shell: |
        cd {{ script_dir }}
        ./insert_demo_rec.sh
      environment: "{{ env_vars }}"
      register: step1
      
    - name: Show Step 1 output
      debug:
        msg: "{{ step1.stdout_lines }}"
    
    - name: Step 2 - Shutdown clone database
      shell: |
        cd {{ script_dir }}
        ./shutdown.sh
      environment: "{{ env_vars }}"
      register: step2
      
    - name: Show Step 2 output
      debug:
        msg: "{{ step2.stdout_lines }}"
    
    - name: Step 3 - Dismount ASM disk groups
      shell: |
        cd {{ script_dir }}
        ./dismount_asm.sh
      environment: "{{ env_vars | combine({'ORACLE_SID': '+ASM'}) }}"
      register: step3
      
    - name: Show Step 3 output
      debug:
        msg: "{{ step3.stdout_lines }}"
    
    - name: Step 4 and 5 - Create snapshot and copy volumes
      shell: |
        cd {{ script_dir }}
        ./pure_snap.sh
      environment: "{{ env_vars }}"
      register: step4_5
      
    - name: Show Step 4 and 5 output
      debug:
        msg: "{{ step4_5.stdout_lines }}"
    
    - name: Step 6 - Mount ASM disk groups
      shell: |
        cd {{ script_dir }}
        ./mount_asm.sh
      environment: "{{ env_vars | combine({'ORACLE_SID': '+ASM'}) }}"
      register: step6
      
    - name: Show Step 6 output
      debug:
        msg: "{{ step6.stdout_lines }}"
    
    - name: Step 7 - Startup clone database
      shell: |
        cd {{ script_dir }}
        ./startup.sh
      environment: "{{ env_vars }}"
      register: step7
      
    - name: Show Step 7 output
      debug:
        msg: "{{ step7.stdout_lines }}"
    
    - name: Step 8 - Verify the refresh
      shell: |
        cd {{ script_dir }}
        ./show_demo_rec.sh
      environment: "{{ env_vars }}"
      register: step8
      
    - name: Show Step 8 output
      debug:
        msg: "{{ step8.stdout_lines }}"
    
    - name: Refresh Complete
      debug:
        msg:
          - "======================================"
          - "Database Refresh Completed Successfully!"
          - "======================================"
          - "The clone database on Oracle2 has been refreshed from Oracle1"
          - "Verification record was found in the cloned database"
